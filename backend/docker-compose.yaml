services:

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - animals-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - animals-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    ports:
      - "9092:9092" # внутри докера
      - "29092:29092" # извне
    networks:
      - animals-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - animals-network

  auth_db:
    container_name: auth-db
    image: postgres:16.0
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    ports:
      - "5432:5432"
    volumes:
      - pg_auth:/var/lib/postgresql/data
    networks:
      - animals-network

  main_db:
    container_name: main-db
    image: postgres:16.0
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    ports:
      - "5430:5432"
    volumes:
      - pg_main:/var/lib/postgresql/data
    networks:
      - animals-network

  eureka-server:
    container_name: eureka-server
    restart: always
    build: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: "8761"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka/"
      JWT_SECRET: "4NsXDZsWheo+OGCrEtdsZ/av3Ndj2LDB4SNzFPPkdSg="
    networks:
      - animals-network

  api-gateway:
    container_name: api-gateway
    restart: always
    build: ./api-gateway
    ports:
      - "80:80"
    depends_on:
      - eureka-server
      - auth-service
    environment:
      SERVER_PORT: "80"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka/"
      JWT_SECRET: "b5f59337a612a2a7dc07328f3e7d1a04722967c7f06df20a499a7d3f91ff2a7e"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_VK_CLIENTID: "52916407"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_VK_CLIENTSECRET: "pDQj5xjxpfyxwYiqpXwV"
      SPRING_R2DBC_URL: "r2dbc:postgresql://auth_db/auth_db"
      SPRING_R2DBC_USERNAME: "postgres"
      SPRING_R2DBC_PASSWORD: "postgres"
    networks:
      - animals-network
  # микросервис входа
  auth-service:
    container_name: auth-service
    restart: always
    build: ./auth-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SERVER_PORT: "8084"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka/"
      JWT_SECRET: "b5f59337a612a2a7dc07328f3e7d1a04722967c7f06df20a499a7d3f91ff2a7e"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_VK_CLIENTID: "52916407"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_VK_CLIENTSECRET: "pDQj5xjxpfyxwYiqpXwV"
      SPRING_JDBC_URL: "jdbc:postgresql://auth_db/auth_db"
      SPRING_JDBC_USERNAME: "postgres"
      SPRING_JDBC_PASSWORD: "postgres"
    networks:
      - animals-network
  # микросервис взаимодействия пользователя
  user-service:
    container_name: user-service
    restart: always
    build: ./user-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SERVER_PORT: "8082"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka/"
    networks:
      - animals-network

  animal-advice-service:
    container_name: animal-advice-service
    build:
      context: ./animal-advice-service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    environment:
      - POSTGRES_SERVER=main_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
      - DEEPSEEK_API_KEY=sk-caf1d8be739f4e2ea2da177bd37e5c01
      - EUREKA_SERVER=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - main_db
    networks:
      - animals-network
networks:
  animals-network:
    driver: bridge

volumes:
  pg_main:
  pg_auth: